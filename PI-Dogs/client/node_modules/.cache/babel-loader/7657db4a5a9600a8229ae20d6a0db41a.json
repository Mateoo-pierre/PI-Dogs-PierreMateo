{"ast":null,"code":"import { GET_DOGS, FILTER } from \"../actions/constants\";\nlet initialState = {\n  dogs: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case FILTER:\n      const allDogs = state.dogs;\n      console.log(allDogs);\n      const filter = action.payload == 'todos' ? allDogs : allDogs.filter(e => e.name === 'Affenpinscher'); // let filter = action.payload === 'todos'? allDogs : allDogs.filter(e => e.name === 'Affenpinscher')\n\n      return { ...state,\n        dogs: filter\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["GET_DOGS","FILTER","initialState","dogs","root","state","action","type","payload","allDogs","console","log","filter","e","name"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,sBAAjC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAG;AADQ,CAAnB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIA,SAAKP,MAAL;AACI,YAAMQ,OAAO,GAAGJ,KAAK,CAACF,IAAtB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,YAAMG,MAAM,GAAGN,MAAM,CAACE,OAAP,IAAkB,OAAlB,GAA4BC,OAA5B,GAAsCA,OAAO,CAACG,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,eAA/B,CAArD,CAHJ,CAII;;AACA,aAAO,EACH,GAAGT,KADA;AAEHF,QAAAA,IAAI,EAAES;AAFH,OAAP;;AAIJ;AACA,aAAOP,KAAP;AAhBJ;AAkBH,CAnBD;;AAqBA,eAAeD,IAAf","sourcesContent":["import { GET_DOGS, FILTER } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS :\n        return {\n            ...state,\n            dogs: action.payload\n        }\n        case FILTER :\n            const allDogs = state.dogs;\n            console.log(allDogs);\n            const filter = action.payload == 'todos' ? allDogs : allDogs.filter(e => e.name === 'Affenpinscher');\n            // let filter = action.payload === 'todos'? allDogs : allDogs.filter(e => e.name === 'Affenpinscher')\n            return {\n                ...state,\n                dogs: filter\n            }\n        default :\n        return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}