{"ast":null,"code":"import { filter } from \"../actions/actions\";\nimport { GET_DOGS, FILTER } from \"../actions/constants\";\nlet initialState = {\n  dogs: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case FILTER:\n      const dogs = state.dogs;\n      const filter = action.payload === 'todos' ? dogs : dogs.filter(e => {\n        if (action.payload === 'existente') {\n          return e.status === undefined;\n        }\n\n        ;\n\n        if (action.payload === 'agregadas') {\n          return e.status === true;\n        }\n      });\n      return { ...state,\n        dogs: filter\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["filter","GET_DOGS","FILTER","initialState","dogs","root","state","action","type","payload","e","status","undefined"],"mappings":"AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,sBAAjC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAG;AADQ,CAAnB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIA,SAAKP,MAAL;AACI,YAAME,IAAI,GAAGE,KAAK,CAACF,IAAnB;AACA,YAAMJ,MAAM,GAAGO,MAAM,CAACE,OAAP,KAAmB,OAAnB,GAA6BL,IAA7B,GAAoCA,IAAI,CAACJ,MAAL,CAAaU,CAAC,IAAI;AACjE,YAAGH,MAAM,CAACE,OAAP,KAAmB,WAAtB,EAAkC;AAC9B,iBAAOC,CAAC,CAACC,MAAF,KAAaC,SAApB;AACH;;AAAA;;AACD,YAAGL,MAAM,CAACE,OAAP,KAAmB,WAAtB,EAAkC;AAC9B,iBAAOC,CAAC,CAACC,MAAF,KAAa,IAApB;AACH;AACJ,OAPkD,CAAnD;AAQA,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,IAAI,EAAEJ;AAFH,OAAP;;AAIJ;AACA,aAAOM,KAAP;AArBJ;AAuBH,CAxBD;;AA0BA,eAAeD,IAAf","sourcesContent":["import { filter } from \"../actions/actions\";\nimport { GET_DOGS, FILTER } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS : \n        return {\n            ...state,\n            dogs: action.payload\n        }\n        case FILTER :\n            const dogs = state.dogs;\n            const filter = action.payload === 'todos' ? dogs : dogs.filter( e => {\n                if(action.payload === 'existente'){\n                    return e.status === undefined;\n                };\n                if(action.payload === 'agregadas'){\n                    return e.status === true\n                }\n            })\n            return {\n                ...state,\n                dogs: filter\n            }\n        default : \n        return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}