{"ast":null,"code":"import { GET_DOGS, FILTER, GET_BY_NAME, ADD_DOG, GET_TEMPERAMENTS, FILTER_WEIGHT, FILTER_NAME, FILTER_TEMP, DOG_DETAILS } from \"../actions/constants\";\nlet initialState = {\n  dogs: [],\n  allDogs: [],\n  dogDetails: [],\n  temperaments: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload,\n        allDogs: action.payload\n      };\n\n    case FILTER:\n      const allDogs = state.allDogs;\n      const filter = action.payload === 'todos' ? allDogs : allDogs.filter(e => {\n        if (action.payload === 'agregada') {\n          return e.status;\n        }\n\n        if (action.payload === 'existente') {\n          return !e.status;\n        }\n      });\n      return { ...state,\n        dogs: filter\n      };\n\n    case FILTER_TEMP:\n      const temp = action.payload === 'todos' ? state.allDogs : state.allDogs.filter(e => {\n        if (e.temperament) {\n          const espacio = ', ';\n\n          if (Array.isArray(e.temperament)) {\n            return e.temperament.find(e => e.name === action.payload);\n          }\n\n          return e.temperament.split(espacio).find(e => e === action.payload);\n        }\n      });\n      return { ...state,\n        dogs: temp\n      };\n\n    case GET_BY_NAME:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case ADD_DOG:\n      return { ...state\n      };\n\n    case GET_TEMPERAMENTS:\n      return { ...state,\n        temperaments: action.payload\n      };\n\n    case FILTER_NAME:\n      const filterByName = action.payload === 'az' ? state.dogs.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        if (b.name > a.name) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.dogs.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n\n        if (b.name > a.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n      const filterName = filterByName.map(e => e);\n      return { ...state,\n        dogs: filterName\n      };\n\n    case FILTER_WEIGHT:\n      const filterByWeight = action.payload === 'menor' ? state.dogs.sort(function (a, b) {\n        console.log(a);\n\n        if (a.weight.metric > b.weight.metric) {\n          return 1;\n        }\n\n        if (b.weight.metric > a.weight.metric) {\n          return -1;\n        }\n\n        return 0;\n      }) : state.dogs.sort(function (a, b) {\n        if (a.weight.metric[0] > b.weight.metric[0]) {\n          return -1;\n        }\n\n        if (b.weight.metric[0] > a.weight.metric[0]) {\n          return 1;\n        }\n\n        return 0;\n      });\n      const filterWeight = filterByWeight.map(e => e);\n      return { ...state,\n        dogs: filterWeight\n      };\n\n    case DOG_DETAILS:\n      return { ...state,\n        dogDetails: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["GET_DOGS","FILTER","GET_BY_NAME","ADD_DOG","GET_TEMPERAMENTS","FILTER_WEIGHT","FILTER_NAME","FILTER_TEMP","DOG_DETAILS","initialState","dogs","allDogs","dogDetails","temperaments","root","state","action","type","payload","filter","e","status","temp","temperament","espacio","Array","isArray","find","name","split","filterByName","sort","a","b","filterName","map","filterByWeight","console","log","weight","metric","filterWeight"],"mappings":"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","sourcesContent":["import { GET_DOGS, FILTER, GET_BY_NAME, ADD_DOG, GET_TEMPERAMENTS, FILTER_WEIGHT, FILTER_NAME, FILTER_TEMP, DOG_DETAILS } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n    allDogs : [],\n    dogDetails : [],\n    temperaments : []\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS :\n            return {\n                ...state,\n                dogs: action.payload,\n                allDogs : action.payload\n            }\n            case FILTER :\n                const allDogs = state.allDogs;\n                const filter = action.payload === 'todos' ? allDogs : allDogs.filter(e => {\n                    if(action.payload === 'agregada'){\n                        return e.status \n                    }\n                    if(action.payload === 'existente'){\n                        return !e.status\n                    }\n                });\n                return {\n                    ...state,\n                    dogs: filter\n                };\n            case FILTER_TEMP : \n                const temp = action.payload === 'todos' ? state.allDogs : state.allDogs.filter( e => {\n                    if(e.temperament){\n                        const espacio = ', ';\n                        if(Array.isArray(e.temperament)){\n                            return e.temperament.find(e => e.name === action.payload)\n                        }\n                       return e.temperament.split(espacio).find(e => e === action.payload) \n                    }\n                })\n                return {\n                    ...state,\n                    dogs: temp\n                }    \n            case GET_BY_NAME : \n                return {\n                    ...state,\n                dogs: action.payload\n            };\n        case ADD_DOG :\n            return {\n                ...state\n            };\n        case GET_TEMPERAMENTS : \n            return {\n                ...state,\n                temperaments: action.payload\n            };     \n        case FILTER_NAME :\n            const filterByName = action.payload === 'az' ?\n                state.dogs.sort(function(a, b) {\n                    if(a.name > b.name) {\n                        return 1;\n                    }\n                    if(b.name > a.name) {\n                        return -1;\n                    }\n                    return 0;\n                }) :\n                state.dogs.sort(function(a, b) {\n                    if(a.name > b.name) {\n                        return -1;\n                    }\n                    if(b.name > a.name) {\n                        return 1\n                    }\n                    return 0;\n                });\n            const filterName = filterByName.map(e => e)    \n                return {\n                    ...state,\n                    dogs: filterName\n                } ;\n            case FILTER_WEIGHT : \n                const filterByWeight = action.payload === 'menor' ?\n                state.dogs.sort(function(a, b) {\n                    console.log(a);\n                    if(a.weight.metric > b.weight.metric) {\n                        return 1;\n                    }\n                    if(b.weight.metric > a.weight.metric) {\n                        return -1;\n                    }\n                    return 0;\n                }) :\n                state.dogs.sort(function(a, b) {\n                    if(a.weight.metric[0] > b.weight.metric[0]) {\n                        return -1;\n                    }\n                    if(b.weight.metric[0] > a.weight.metric[0]) {\n                        return 1\n                    }\n                    return 0;\n                });\n            const filterWeight = filterByWeight.map(e => e)\n            return {\n                ...state,\n                dogs: filterWeight\n            }   \n        case DOG_DETAILS : \n            return{\n                ...state,\n                dogDetails : action.payload\n            }\n        default :\n            return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}