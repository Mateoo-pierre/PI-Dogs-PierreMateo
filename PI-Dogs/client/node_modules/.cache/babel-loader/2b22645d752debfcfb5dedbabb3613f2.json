{"ast":null,"code":"import { GET_DOGS, FILTER } from \"../actions/constants\";\nlet initialState = {\n  dogs: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case FILTER:\n      const allDogs = state.dogs;\n      const filter = action.payload == 'todos' ? allDogs : allDogs.map(e => {\n        if (e.status === undefined) {\n          return e.status === undefined;\n        } else {\n          console.log(dogs);\n          dogs.push(e);\n        }\n      });\n      return { ...state,\n        dogs: dogs\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["GET_DOGS","FILTER","initialState","dogs","root","state","action","type","payload","allDogs","filter","map","e","status","undefined","console","log","push"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,sBAAjC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAG;AADQ,CAAnB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIA,SAAKP,MAAL;AACI,YAAMQ,OAAO,GAAGJ,KAAK,CAACF,IAAtB;AACA,YAAMO,MAAM,GAAGJ,MAAM,CAACE,OAAP,IAAkB,OAAlB,GAA4BC,OAA5B,GAAsCA,OAAO,CAACE,GAAR,CAAaC,CAAC,IAAI;AACnE,YAAGA,CAAC,CAACC,MAAF,KAAaC,SAAhB,EAA0B;AACtB,iBAAOF,CAAC,CAACC,MAAF,KAAaC,SAApB;AACH,SAFD,MAGK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAA,UAAAA,IAAI,CAACc,IAAL,CAAUL,CAAV;AACH;AACJ,OARoD,CAArD;AASA,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,IAAI,EAAEA;AAFH,OAAP;;AAIJ;AACA,aAAOE,KAAP;AAtBJ;AAwBH,CAzBD;;AA2BA,eAAeD,IAAf","sourcesContent":["import { GET_DOGS, FILTER } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS : \n        return {\n            ...state,\n            dogs: action.payload\n        }\n        case FILTER :\n            const allDogs = state.dogs;\n            const filter = action.payload == 'todos' ? allDogs : allDogs.map( e => {\n                if(e.status === undefined){\n                    return e.status === undefined\n                }\n                else {\n                    console.log(dogs);\n                    dogs.push(e)\n                }\n            })\n            return {\n                ...state,\n                dogs: dogs\n            }\n        default : \n        return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}