{"ast":null,"code":"import { GET_DOGS, FILTER } from \"../actions/constants\";\nlet initialState = {\n  dogs: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case FILTER:\n      const todos = state.dogs;\n      console.log('soy action', action.payload);\n      console.log('soy todos', todos);\n      if (action.payload === 'todos') return todos;\n\n      if (action.payload === 'existente') {\n        const filter = todos.filter(e => {\n          if (!e.status) {\n            return e.status === undefined;\n          }\n        });\n      }\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["GET_DOGS","FILTER","initialState","dogs","root","state","action","type","payload","todos","console","log","filter","e","status","undefined"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,sBAAjC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAG;AADQ,CAAnB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIA,SAAKP,MAAL;AACI,YAAMQ,KAAK,GAAGJ,KAAK,CAACF,IAApB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBL,MAAM,CAACE,OAAhC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,KAAxB;AACA,UAAGH,MAAM,CAACE,OAAP,KAAmB,OAAtB,EAA+B,OAAOC,KAAP;;AAC/B,UAAGH,MAAM,CAACE,OAAP,KAAmB,WAAtB,EAAmC;AAC/B,cAAMI,MAAM,GAAGH,KAAK,CAACG,MAAN,CAAcC,CAAC,IAAI;AAC9B,cAAG,CAACA,CAAC,CAACC,MAAN,EAAc;AACV,mBAAOD,CAAC,CAACC,MAAF,KAAaC,SAApB;AACH;AACJ,SAJc,CAAf;AAKH;;AACD,aAAO,EACH,GAAGV;AADA,OAAP;;AAIJ;AACA,aAAOA,KAAP;AAvBJ;AAyBH,CA1BD;;AA4BA,eAAeD,IAAf","sourcesContent":["import { GET_DOGS, FILTER } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS : \n        return {\n            ...state,\n            dogs: action.payload\n        }\n        case FILTER :\n            const todos = state.dogs;\n            console.log('soy action',action.payload);\n            console.log('soy todos',todos);\n            if(action.payload === 'todos') return todos;\n            if(action.payload === 'existente' ){\n                const filter = todos.filter( e => {\n                    if(!e.status) {\n                        return e.status === undefined\n                    }\n                })\n            }\n            return {\n                ...state\n\n            }\n        default : \n        return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}