{"ast":null,"code":"import { GET_DOGS, FILTER, GET_BY_NAME, ADD_DOG, GET_TEMPERAMENTS } from \"../actions/constants\";\nlet initialState = {\n  dogs: [],\n  allDogs: [],\n  temperaments: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload,\n        allDogs: action.payload\n      };\n\n    case FILTER:\n      const allDogs = state.allDogs;\n      console.log(allDogs);\n      const filter = action.payload == 'todos' ? allDogs : allDogs.filter(e => {\n        if (action.payload === 'agregada') {\n          return e.status;\n        }\n\n        if (action.payload === 'existente') {\n          return !e.status;\n        }\n      });\n      return { ...state,\n        dogs: filter\n      };\n\n    case GET_BY_NAME:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case ADD_DOG:\n      return { ...state\n      };\n\n    case GET_TEMPERAMENTS:\n      return { ...state,\n        temperaments: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["GET_DOGS","FILTER","GET_BY_NAME","ADD_DOG","GET_TEMPERAMENTS","initialState","dogs","allDogs","temperaments","root","state","action","type","payload","console","log","filter","e","status"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCC,OAAxC,EAAiDC,gBAAjD,QAAyE,sBAAzE;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAG,EADQ;AAEfC,EAAAA,OAAO,EAAG,EAFK;AAGfC,EAAAA,YAAY,EAAG;AAHA,CAAnB;;AAMA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,QAAL;AACA,aAAO,EACH,GAAGU,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFV;AAGHN,QAAAA,OAAO,EAAGI,MAAM,CAACE;AAHd,OAAP;;AAKA,SAAKZ,MAAL;AACI,YAAMM,OAAO,GAAGG,KAAK,CAACH,OAAtB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,YAAMS,MAAM,GAAGL,MAAM,CAACE,OAAP,IAAkB,OAAlB,GAA4BN,OAA5B,GAAsCA,OAAO,CAACS,MAAR,CAAeC,CAAC,IAAI;AACrE,YAAGN,MAAM,CAACE,OAAP,KAAmB,UAAtB,EAAiC;AAC7B,iBAAOI,CAAC,CAACC,MAAT;AACH;;AACD,YAAGP,MAAM,CAACE,OAAP,KAAmB,WAAtB,EAAkC;AAC9B,iBAAO,CAACI,CAAC,CAACC,MAAV;AACH;AACJ,OAPoD,CAArD;AAQA,aAAO,EACH,GAAGR,KADA;AAEHJ,QAAAA,IAAI,EAAEU;AAFH,OAAP;;AAIJ,SAAKd,WAAL;AACI,aAAO,EACH,GAAIQ,KADD;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAFV,OAAP;;AAIJ,SAAKV,OAAL;AACI,aAAO,EACH,GAAIO;AADD,OAAP;;AAGJ,SAAKN,gBAAL;AACI,aAAO,EACH,GAAIM,KADD;AAEHF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAFlB,OAAP;;AAIJ;AACA,aAAOH,KAAP;AArCJ;AAuCH,CAxCD;;AA0CA,eAAeD,IAAf","sourcesContent":["import { GET_DOGS, FILTER, GET_BY_NAME, ADD_DOG, GET_TEMPERAMENTS } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n    allDogs : [],\n    temperaments : []\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS :\n        return {\n            ...state,\n            dogs: action.payload,\n            allDogs : action.payload\n        }\n        case FILTER :\n            const allDogs = state.allDogs;\n            console.log(allDogs);\n            const filter = action.payload == 'todos' ? allDogs : allDogs.filter(e => {\n                if(action.payload === 'agregada'){\n                    return e.status \n                }\n                if(action.payload === 'existente'){\n                    return !e.status\n                }\n            });\n            return {\n                ...state,\n                dogs: filter\n            };\n        case GET_BY_NAME :  \n            return {\n                ... state,\n                dogs: action.payload\n            };\n        case ADD_DOG :\n            return {\n                ... state\n            };\n        case GET_TEMPERAMENTS : \n            return {\n                ... state,\n                temperaments: action.payload\n            };    \n        default :\n        return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}