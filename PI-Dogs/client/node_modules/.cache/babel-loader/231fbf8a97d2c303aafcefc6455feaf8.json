{"ast":null,"code":"import { GET_DOGS, FILTER } from \"../actions/constants\";\nlet initialState = {\n  dogs: []\n};\n\nconst root = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DOGS:\n      return { ...state,\n        dogs: action.payload\n      };\n\n    case FILTER:\n      const allDogs = state.dogs;\n      let filter = [];\n\n      if (action.payload == 'todos') {\n        filter = allDogs;\n        return filter;\n      }\n\n      if (action.payload = 'existente') {\n        filter = allDogs.filter(e => e.name === 'Affenpinscher');\n      } // let filter = action.payload === 'todos'? allDogs : allDogs.filter(e => e.name === 'Affenpinscher')\n\n\n      return { ...state,\n        dogs: filter\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default root;","map":{"version":3,"sources":["/home/mateo/PI-Dogs-PierreMateo/PI-Dogs/client/src/reducer/reducer.js"],"names":["GET_DOGS","FILTER","initialState","dogs","root","state","action","type","payload","allDogs","filter","e","name"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,sBAAjC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAG;AADQ,CAAnB;;AAIA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AACA,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFV,OAAP;;AAIA,SAAKP,MAAL;AACI,YAAMQ,OAAO,GAAGJ,KAAK,CAACF,IAAtB;AACA,UAAIO,MAAM,GAAG,EAAb;;AACA,UAAGJ,MAAM,CAACE,OAAP,IAAkB,OAArB,EAA6B;AACzBE,QAAAA,MAAM,GAAGD,OAAT;AACA,eAAOC,MAAP;AACH;;AACD,UAAGJ,MAAM,CAACE,OAAP,GAAiB,WAApB,EAAgC;AAC5BE,QAAAA,MAAM,GAAGD,OAAO,CAACC,MAAR,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAW,eAAhC,CAAT;AACH,OATL,CAUI;;;AACA,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,IAAI,EAAEO;AAFH,OAAP;;AAIJ;AACA,aAAOL,KAAP;AAtBJ;AAwBH,CAzBD;;AA2BA,eAAeD,IAAf","sourcesContent":["import { GET_DOGS, FILTER } from \"../actions/constants\";\n\nlet initialState = {\n    dogs : [],\n};\n\nconst root = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_DOGS :\n        return {\n            ...state,\n            dogs: action.payload\n        }\n        case FILTER :\n            const allDogs = state.dogs;\n            let filter = [];\n            if(action.payload == 'todos'){\n                filter = allDogs;\n                return filter\n            }\n            if(action.payload = 'existente'){\n                filter = allDogs.filter( e => e.name === 'Affenpinscher')\n            }\n            // let filter = action.payload === 'todos'? allDogs : allDogs.filter(e => e.name === 'Affenpinscher')\n            return {\n                ...state,\n                dogs: filter\n            }\n        default :\n        return state;\n    }\n};\n\nexport default root;"]},"metadata":{},"sourceType":"module"}